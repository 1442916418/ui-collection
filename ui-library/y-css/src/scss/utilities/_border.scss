//
// Border
//

// Border radius
.rounded-circle {
  border-radius: $circle-radius !important;
}

.rounded-t-circle {
  border-top-left-radius: $circle-radius !important;
  border-top-right-radius: $circle-radius !important;
}

.rounded-r-circle {
  border-top-right-radius: $circle-radius !important;
  border-bottom-right-radius: $circle-radius !important;
}

.rounded-b-circle {
  border-bottom-right-radius: $circle-radius !important;
  border-bottom-left-radius: $circle-radius !important;
}

.rounded-l-circle {
  border-top-left-radius: $circle-radius !important;
  border-bottom-left-radius: $circle-radius !important;
}

.rounded-none {
  border-radius: 0 !important;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: '-#{$breakpoint}';

  $value: computed-breakpoint-value(
    $infix,
    $border-radius,
    (
      '': 1,
      '-xs': 1,
      '-sm': 2,
      '-md': 4,
      '-lg': 6,
      '-xl': 8
    )
  );

  .rounded#{$infix} {
    border-radius: $value !important;
  }

  .rounded-t#{$infix} {
    border-top-left-radius: $value !important;
    border-top-right-radius: $value !important;
  }

  .rounded-r#{$infix} {
    border-top-right-radius: $value !important;
    border-bottom-right-radius: $value !important;
  }

  .rounded-b#{$infix} {
    border-bottom-right-radius: $value !important;
    border-bottom-left-radius: $value !important;
  }

  .rounded-l#{$infix} {
    border-top-left-radius: $value !important;
    border-bottom-left-radius: $value !important;
  }
}

// Border width
@for $i from 1 through 10 {
  @if ($i == 1 or $i % 2 == 0) {
    $size: $border-width * $i;

    .border-#{$i} {
      border-width: $size !important;
    }
    .border-t-#{$i} {
      border-top-width: $size !important;
    }
    .border-r-#{$i} {
      border-right-width: $size !important;
    }
    .border-b-#{$i} {
      border-bottom-width: $size !important;
    }
    .border-l-#{$i} {
      border-left-width: $size !important;
    }
  }
}

// Border style
@each $type in $border-styles {
  .border-#{$type} {
    border-style: $type !important;
  }
  .border-top-#{$type} {
    border-top-style: $type !important;
  }
  .border-right-#{$type} {
    border-right-style: $type !important;
  }
  .border-bottom-#{$type} {
    border-bottom-style: $type !important;
  }
  .border-left-#{$type} {
    border-left-style: $type !important;
  }
}

// Border color
@each $color, $value in $theme-colors {
  .border-#{$color} {
    border-color: $value !important;
  }
}

@each $color, $value in $all-colors {
  .border-#{$color} {
    border-color: $value !important;
  }
}
