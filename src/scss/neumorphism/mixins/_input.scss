@mixin input-variant($type, $background, $border-radius, $input-px, $input-font-size) {
  $--color: color-yiq($background);

  @if $type == 'primary' {
    $--border-color: darken($background, 5%);
    .input {
      color: $--color;
      background: $background;
      box-shadow: box-shadow('#{$type}-inset');
    }

    .input:focus-within:not([disabled]),
    .input:not([disabled]):hover {
      border-color: $--border-color;
    }

    :host .input::placeholder {
      color: darken($background, 40%);
    }

    // BUG: 左右边距
    .prefix,
    .suffix {
      color: $--color;
      font-size: $input-font-size;
    }

    :host([prefix-icon]),
    :host([suffix-icon]),
    :host([slot-prefix]),
    :host([slot-suffix]),
    :host([type='password']),
    :host([type='search']) {
      border-color: $--border-color;
      background-color: $background;
    }

    :host([prefix-icon]) .input,
    :host([slot-prefix]) .input,
    :host([type='password']) .input {
      border-width: 0;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    :host([suffix-icon]) .input,
    :host([slot-suffix]) .input,
    :host([type='password']) .input,
    :host([type='search']) .input {
      border-width: 0;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  } @else {
    $--border-color: darken($background, 10%);

    :host([theme='#{$type}']) .input {
      color: $--color;
      background: $background;
      box-shadow: box-shadow('#{$type}-inset');
    }

    :host([theme='#{$type}']) .input:focus-within:not([disabled]),
    :host([theme='#{$type}']) .input:not([disabled]):hover {
      border-color: $--border-color;
    }

    :host([theme='#{$type}']) .input::placeholder {
      color: darken($--color, 20%);
    }

    // BUG: 左右边距
    :host([theme='#{$type}']) .prefix,
    :host([theme='#{$type}']) .suffix {
      color: $--color;
      font-size: $input-font-size;
    }

    :host([theme='#{$type}']):host([prefix-icon]),
    :host([theme='#{$type}']):host([suffix-icon]),
    :host([theme='#{$type}']):host([slot-prefix]),
    :host([theme='#{$type}']):host([slot-suffix]),
    :host([theme='#{$type}']):host([type='password']),
    :host([theme='#{$type}']):host([type='search']) {
      border-color: $--border-color;
      background-color: $background;
    }

    :host([theme='#{$type}']):host([prefix-icon]) .input,
    :host([theme='#{$type}']):host([slot-prefix]) .input,
    :host([theme='#{$type}']):host([type='password']) .input {
      border-width: 0;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    :host([theme='#{$type}']):host([suffix-icon]) .input,
    :host([theme='#{$type}']):host([slot-suffix]) .input,
    :host([theme='#{$type}']):host([type='password']) .input,
    :host([theme='#{$type}']):host([type='search']) .input {
      border-width: 0;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
}

@mixin input-size($type, $font-size, $input-py, $input-px, $input-font-size, $line-height-base, $border-radius) {
  :host([size='#{$type}']) .input {
    padding: theme-styles-size($type, $input-py) theme-styles-size($type, $input-py);
    font-size: theme-styles-size($type, $input-font-size);
    line-height: theme-styles-size($type, $line-height-base);

    @if $enable-rounded {
      @include border-radius($border-radius);
    } @else {
      border-radius: 0;
    }
  }
}
